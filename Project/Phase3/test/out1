Error type 2 at line 24: undefined function: read
Error type 2 at line 26: undefined function: write
Error type 2 at line 28: undefined function: write
Program (1)
  ExtDefList (1)
    ExtDef (1)
      Specifier (1)
        TYPE: int
      FunDec (1)
        ID: mod
        LP
        VarList (1)
          ParamDec (1)
            Specifier (1)
              TYPE: int
            VarDec (1)
              ID: x
          COMMA
          VarList (1)
            ParamDec (1)
              Specifier (1)
                TYPE: int
              VarDec (1)
                ID: n
        RP
      CompSt (2)
        LC
        StmtList (3)
          Stmt (3)
            RETURN
            Exp (3)
              Exp (3)
                ID: x
              MINUS
              Exp (3)
                Exp (3)
                  LP
                  Exp (3)
                    Exp (3)
                      ID: x
                    DIV
                    Exp (3)
                      ID: n
                  RP
                MUL
                Exp (3)
                  ID: n
            SEMI
        RC
    ExtDefList (6)
      ExtDef (6)
        Specifier (6)
          TYPE: int
        FunDec (6)
          ID: isPalindrome
          LP
          VarList (6)
            ParamDec (6)
              Specifier (6)
                TYPE: int
              VarDec (6)
                ID: num
          RP
        CompSt (6)
          LC
          DefList (7)
            Def (7)
              Specifier (7)
                TYPE: int
              DecList (7)
                Dec (7)
                  VarDec (7)
                    ID: reversed
                  ASSIGN
                  Exp (7)
                    INT: 0
              SEMI
            DefList (8)
              Def (8)
                Specifier (8)
                  TYPE: int
                DecList (8)
                  Dec (8)
                    VarDec (8)
                      ID: original
                    ASSIGN
                    Exp (8)
                      ID: num
                SEMI
              DefList (9)
                Def (9)
                  Specifier (9)
                    TYPE: int
                  DecList (9)
                    Dec (9)
                      VarDec (9)
                        ID: digit
                      ASSIGN
                      Exp (9)
                        INT: 0
                  SEMI
          StmtList (10)
            Stmt (10)
              WHILE
              LP
              Exp (10)
                Exp (10)
                  ID: num
                NE
                Exp (10)
                  INT: 0
              RP
              Stmt (10)
                CompSt (10)
                  LC
                  StmtList (11)
                    Stmt (11)
                      Exp (11)
                        Exp (11)
                          ID: digit
                        ASSIGN
                        Exp (11)
                          ID: mod
                          LP
                          Args (11)
                            Exp (11)
                              ID: num
                            COMMA
                            Args (11)
                              Exp (11)
                                INT: 10
                          RP
                      SEMI
                    StmtList (12)
                      Stmt (12)
                        Exp (12)
                          Exp (12)
                            ID: reversed
                          ASSIGN
                          Exp (12)
                            Exp (12)
                              Exp (12)
                                ID: reversed
                              MUL
                              Exp (12)
                                INT: 10
                            PLUS
                            Exp (12)
                              ID: digit
                        SEMI
                      StmtList (13)
                        Stmt (13)
                          Exp (13)
                            Exp (13)
                              ID: num
                            ASSIGN
                            Exp (13)
                              Exp (13)
                                ID: num
                              DIV
                              Exp (13)
                                INT: 10
                          SEMI
                  RC
            StmtList (15)
              Stmt (15)
                IF
                LP
                Exp (15)
                  Exp (15)
                    ID: reversed
                  EQ
                  Exp (15)
                    ID: original
                RP
                Stmt (15)
                  CompSt (15)
                    LC
                    StmtList (16)
                      Stmt (16)
                        RETURN
                        Exp (16)
                          INT: 1
                        SEMI
                    RC
                ELSE
                Stmt (17)
                  CompSt (17)
                    LC
                    StmtList (18)
                      Stmt (18)
                        RETURN
                        Exp (18)
                          INT: 0
                        SEMI
                    RC
          RC
      ExtDefList (22)
        ExtDef (22)
          Specifier (22)
            TYPE: int
          FunDec (22)
            ID: main
            LP
            RP
          CompSt (22)
            LC
            DefList (23)
              Def (23)
                Specifier (23)
                  TYPE: int
                DecList (23)
                  Dec (23)
                    VarDec (23)
                      ID: number
                SEMI
            StmtList (24)
              Stmt (24)
                Exp (24)
                  Exp (24)
                    ID: number
                  ASSIGN
                  Exp (24)
                    ID: read
                    LP
                    RP
                SEMI
              StmtList (25)
                Stmt (25)
                  IF
                  LP
                  Exp (25)
                    Exp (25)
                      ID: isPalindrome
                      LP
                      Args (25)
                        Exp (25)
                          ID: number
                      RP
                    EQ
                    Exp (25)
                      INT: 1
                  RP
                  Stmt (25)
                    CompSt (25)
                      LC
                      StmtList (26)
                        Stmt (26)
                          Exp (26)
                            ID: write
                            LP
                            Args (26)
                              Exp (26)
                                INT: 1
                            RP
                          SEMI
                      RC
                  ELSE
                  Stmt (27)
                    CompSt (27)
                      LC
                      StmtList (28)
                        Stmt (28)
                          Exp (28)
                            ID: write
                            LP
                            Args (28)
                              Exp (28)
                                MINUS
                                Exp (28)
                                  INT: 1
                            RP
                          SEMI
                      RC
                StmtList (31)
                  Stmt (31)
                    RETURN
                    Exp (31)
                      INT: 0
                    SEMI
            RC
NONTERMINAL Program
ExtDefList, nodes num == 2
ExtDef, nodes num == 3
FunDec, nodes num == 4
CompSt, nodes num == 4
StmtList, Stmt StmtList
Stmt, RETURN EXP SEMI
Exp, nodes num == 3
Exp, nodes num == 3
Exp, nodes num == 3
ExtDefList, nodes num == 2
ExtDef, nodes num == 3
FunDec, nodes num == 4
CompSt, nodes num == 4
DefList, nodes num == 2
Def
DecList, nodes num == 1
Dec, nodes num == 3
DefList, nodes num == 2
Def
DecList, nodes num == 1
Dec, nodes num == 3
DefList, nodes num == 2
Def
DecList, nodes num == 1
Dec, nodes num == 3
StmtList, Stmt StmtList
CompSt, nodes num == 4
StmtList, Stmt StmtList
Stmt, Exp SEMI
Exp, nodes num == 3
StmtList, Stmt StmtList
Stmt, Exp SEMI
Exp, nodes num == 3
Exp, nodes num == 3
Exp, nodes num == 3
StmtList, Stmt StmtList
Stmt, Exp SEMI
Exp, nodes num == 3
Exp, nodes num == 3
StmtList, Stmt StmtList
CompSt, nodes num == 4
StmtList, Stmt StmtList
Stmt, RETURN EXP SEMI
CompSt, nodes num == 4
StmtList, Stmt StmtList
Stmt, RETURN EXP SEMI
ExtDefList, nodes num == 2
ExtDef, nodes num == 3
FunDec, nodes num == 3
CompSt, nodes num == 4
DefList, nodes num == 2
Def
DecList, nodes num == 1
Dec, nodes num == 1
StmtList, Stmt StmtList
Stmt, Exp SEMI
Exp, nodes num == 3
StmtList, Stmt StmtList
CompSt, nodes num == 4
StmtList, Stmt StmtList
Stmt, Exp SEMI
CompSt, nodes num == 4
StmtList, Stmt StmtList
Stmt, Exp SEMI
StmtList, Stmt StmtList
Stmt, RETURN EXP SEMI
FUNCTION mod :
PARAM x
PARAM n
t2 := x
t6 := x
t7 := n
t4 := t6 / t7
t5 := n
t3 := t4 * t5
t1 := t2 - t3
RETURN t1
FUNCTION isPalindrome :
PARAM num
reversed := #0
original := num
digit := #0
LABEL label1 :
t8 := num
t9 := #0
IF t8 != t9 GOTO label2
GOTO label3
LABEL label2 :
t11 := num
t12 := #10
ARG t12
ARG t11
digit := CALL mod
t16 := reversed
t17 := #10
t14 := t16 * t17
t15 := digit
reversed := t14 + t15
t19 := num
t20 := #10
num := t19 / t20
GOTO label1
LABEL label3 :
t21 := reversed
t22 := original
IF t21 == t22 GOTO label4
GOTO label5
LABEL label4 :
t23 := #1
RETURN t23
GOTO label6
LABEL label5 :
t24 := #0
RETURN t24
LABEL label6 :
FUNCTION main :
READ number
t28 := number
ARG t28
t26 := CALL isPalindrome
t27 := #1
IF t26 == t27 GOTO label7
GOTO label8
LABEL label7 :
t30 := #1
WRITE t30
GOTO label9
LABEL label8 :
t33 := #1
t32 := #0 - t33
WRITE t32
LABEL label9 :
t34 := #0
RETURN t34
